"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1491],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>v});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=l(t),f=i,v=u["".concat(c,".").concat(f)]||u[f]||d[f]||o;return t?n.createElement(v,s(s({ref:r},p),{},{components:t})):n.createElement(v,s({ref:r},p))}));function v(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=f;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a[u]="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},35:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=t(7462),i=(t(7294),t(3905));const o={},s="Workers",a={unversionedId:"service/service/worker/index",id:"service/service/worker/index",title:"Workers",description:"Workers",source:"@site/docs/service/service/worker/index.mdx",sourceDirName:"service/service/worker",slug:"/service/service/worker/",permalink:"/service/service/worker/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Web Services",permalink:"/service/service/webservice/"},next:{title:"Dependencies",permalink:"/dependency/"}},c={},l=[{value:"Workers",id:"workers-1",level:2},{value:"Description",id:"description",level:3},{value:"Usage",id:"usage",level:3}],p={toc:l},u="wrapper";function d(e){let{components:r,...t}=e;return(0,i.kt)(u,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"workers"},"Workers"),(0,i.kt)("h2",{id:"workers-1"},"Workers"),(0,i.kt)("h3",{id:"description"},"Description"),(0,i.kt)("p",null,'A "Worker" in SleakOps is a service that performs background tasks essential for the operation of web and application infrastructure. Unlike Web Services, Workers are not directly involved in handling user requests. Instead, they are focused on internal processes like data processing, sending notifications, and conducting data backups.'),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("p",null,"To utilize Workers, you define the tasks they need to perform and set them up to run independently of the user-facing operations. These tasks might be scheduled or triggered by certain events within the system. Workers should be optimized for efficiency and reliability, often requiring mechanisms for task queuing and error handling to ensure that all tasks are completed as intended."))}d.isMDXComponent=!0}}]);