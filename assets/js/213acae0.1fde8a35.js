"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8428],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),h=n,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||o;return r?a.createElement(m,s(s({ref:t},u),{},{components:r})):a.createElement(m,s({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},7538:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const o={},s="SleakOps resources overview",i={unversionedId:"sleakops-overview",id:"sleakops-overview",title:"SleakOps resources overview",description:"Here you can check the main resources that SleakOps uses by default to allow you to easily deploy a highly scalable application hosted on the cloud in just some hours. Here we will not talk about the details of how all these are connected, how the permissions policies work, roles or all the things that make everything works correctly.",source:"@site/docs/sleakops-overview.mdx",sourceDirName:".",slug:"/sleakops-overview",permalink:"/sleakops-overview",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Shared Responsibility Model",permalink:"/responsability-model"},next:{title:"User",permalink:"/user/"}},l={},c=[{value:"Main Structure and Networking",id:"main-structure-and-networking",level:2},{value:"Cluster",id:"cluster",level:2},{value:"Dependencies and Services",id:"dependencies-and-services",level:2},{value:"Releases, Deployments and VariableGroup",id:"releases-deployments-and-variablegroup",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"sleakops-resources-overview"},"SleakOps resources overview"),(0,n.kt)("p",null,"Here you can check the main resources that SleakOps uses by default to allow you to easily deploy a highly scalable application hosted on the cloud in just some hours. Here we will not talk about the details of how all these are connected, how the permissions policies work, roles or all the things that make everything works correctly."),(0,n.kt)("p",null,"The initial and main thing SleakOps uses to organize everything is the ",(0,n.kt)("a",{parentName:"p",href:"/provider/accounts"},"Reference Architecture")," so you will need to understand this structure, most of this stuff is created on the ",(0,n.kt)("a",{parentName:"p",href:"/provider/"},"Provider")," step of the Onboarding."),(0,n.kt)("h2",{id:"main-structure-and-networking"},"Main Structure and Networking"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"AWS Organization: We will create an organization on your root account in case you don't have one."),(0,n.kt)("li",{parentName:"ul"},"AWS Account: Following the architecture, at this moment we create three, 'management', 'development' and 'production'."),(0,n.kt)("li",{parentName:"ul"},"Virtual Private Cloud (VPC): Each Account will have its own VPC where SleakOps deploy all the cloud resources, we do not only create the VPC but also all the Networking needs for the resources to work correctly."),(0,n.kt)("li",{parentName:"ul"},"ec2.Instance: The installation of the Pritunl VPN server is done inside a 't3.medium' instance with all the networking rules it requires."),(0,n.kt)("li",{parentName:"ul"},"Route53: Route53 is the DNS service we use to make your applications visible to everyone on the internet, for that we require you to delegate your domain to us on AWS and we handle all the subdomains.")),(0,n.kt)("h2",{id:"cluster"},"Cluster"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"/cluster/"},"Cluster")," on its own can't do anything, we give it the required permissions and install inside it some utilities we take advantage of to deploy the application. The most crucial pieces here are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"EKS Cluster (Kubernetes): Clusters are deployed only in the Accounts you define when you create them."),(0,n.kt)("li",{parentName:"ul"},"Cluster nodes: These are also defined by you when you create a cluster, nodes are an EC2 instance that uses its resources following Kubernetes management."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/cluster/plugins"},"Cluster Plugins"),": A Cluster has many plugins that facilitate infrastructure management.")),(0,n.kt)("p",null,"The Cluster Namespaces are a good way to separate different environments of the infrastructure so we also exploit its benefits by creating them to differentiate what we call 'ProjectEnv' which is just an object that combines a Project and an Environment. As individuals, we create an ECR repository inside the 'management account' for every Project and every Environment will be a subdomain of your deployed domain which is a Route53 HostedZone."),(0,n.kt)("h2",{id:"dependencies-and-services"},"Dependencies and Services"),(0,n.kt)("p",null,"A ",(0,n.kt)("a",{parentName:"p",href:"/dependency/"},"Dependency")," is a cloud resource your application needs to work correctly, for example, a MySql or Postgresql database (RDS Instance), an S3 bucket where to stores static files and so on. Every time you create a Dependency, a cloud resource is created on Aws and a Secret on the Cluster containing useful variables. Each of the dependencies requires many configurations, for that, at this moment, via SleakOps, we let you specify some of its most important configurations."),(0,n.kt)("p",null,"Every ",(0,n.kt)("a",{parentName:"p",href:"/service/"},"Service")," is installed inside the Cluster and on its corresponding Namespace depending on its ProjectEnv, they are deployed from a template we create taking the configurations you set on its creation, like the Command it executes, the resources of the nodes it uses, etc."),(0,n.kt)("h2",{id:"releases-deployments-and-variablegroup"},"Releases, Deployments and VariableGroup"),(0,n.kt)("p",null,"These three objects are part of the final deployment of your application and are installed inside the Cluster, on its own they do not set up any cloud resource:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/deployment/release"},"Releases"),": Creates the Chart and every template of the services you will deploy.\nIt's a Helm release that contains a Chart with every template of the services you will deploy."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/deployment/"},"Deployment"),": It is the actual deployment of the Helm release created before. These steps also use the values of the VariableGroup objects of the ProjectEnv (Namespace) to apply them to the services or the application"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/vargroup"},"VariableGroup"),": They are sets of key-value pairs that are used to configure a service or the applications as a whole. On SleakOps we consider three types of VariableGroups: Globals, Service VarGroups and Dependency VarGroups which are created at the same time a Dependency is created.")))}d.isMDXComponent=!0}}]);