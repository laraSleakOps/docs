"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7943],{2514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(3905)),i=n(9378);n(7435);const o={},s="AWS Provider: Architecture Overview",l={unversionedId:"provider/aws",id:"provider/aws",title:"AWS Provider: Architecture Overview",description:"This is an illustrative example of a general application.",source:"@site/docs/provider/aws.mdx",sourceDirName:"provider",slug:"/provider/aws",permalink:"/provider/aws",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Providers",permalink:"/provider/"},next:{title:"Getting AWS keys",permalink:"/provider/getting-aws-keys"}},c={},u=[{value:"Security Account",id:"security-account",level:3},{value:"Management Account (Management Environment)",id:"management-account-management-environment",level:3},{value:"Production Account (Production Environment)",id:"production-account-production-environment",level:3},{value:"Development Account (dev, qa, and staging Environments)",id:"development-account-dev-qa-and-staging-environments",level:3}],d={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"aws-provider-architecture-overview"},"AWS Provider: Architecture Overview"),(0,r.kt)("p",null,"This is an illustrative example of a general application."),(0,r.kt)(i.Z,{mdxType:"Zoom"},(0,r.kt)("img",{src:"/img/provider/aws/craftech-reference-architecture.png",alt:"craftech-reference-architecture"})),(0,r.kt)("p",null,"Sleakops implements a well-defined infrastructure architecture designed to optimize operational excellence while ensuring a secure and scalable environment for users. The architecture consists of four accounts, each serving distinct purposes and isolated from one another."),(0,r.kt)("p",null,"Each account has a VPN instance generated upon the creation of the first cluster."),(0,r.kt)("h3",{id:"security-account"},"Security Account"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The Security Account serves as a centralized hub for managing IAM users and their access to the system. ")),(0,r.kt)("h3",{id:"management-account-management-environment"},"Management Account (Management Environment)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Contains an EKS cluster with integrated CI/CD (GitHub and HashiCorp Vault)."),(0,r.kt)("li",{parentName:"ul"},"Vault manages credentials for CloudWatch, enhancing monitoring capabilities."),(0,r.kt)("li",{parentName:"ul"},"VPC Peering enables private connections to other accounts.")),(0,r.kt)("h3",{id:"production-account-production-environment"},"Production Account (Production Environment)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Supports external users and requires a fully functional database (RDS Master)."),(0,r.kt)("li",{parentName:"ul"},"Utilizes Private DB Subnet for RDS Master, RDS Slave, and ElastiCache, each on different Availability Zones (AZs) for high availability."),(0,r.kt)("li",{parentName:"ul"},"Backend Deployment with replicas distributed across different AZs."),(0,r.kt)("li",{parentName:"ul"},"Frontend Deployment with LoadBalancer for even distribution of network load."),(0,r.kt)("li",{parentName:"ul"},"Route53 serves as DNS and performs health checks for the application."),(0,r.kt)("li",{parentName:"ul"},"AWS CloudFront serves static frontend content from an S3 bucket."),(0,r.kt)("li",{parentName:"ul"},"RDS Slave acts as a replica of RDS Master for failover scenarios, maximizing uptime.")),(0,r.kt)("h3",{id:"development-account-dev-qa-and-staging-environments"},"Development Account (dev, qa, and staging Environments)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Contains three environments: dev, qa, and staging."),(0,r.kt)("li",{parentName:"ul"},"Replicas of the prod environment for code writing, testing, and pre-releases."),(0,r.kt)("li",{parentName:"ul"},"Ensures isolated testing to prevent issues for external users."),(0,r.kt)("li",{parentName:"ul"},"Similar architecture to prod but without RDS Slave for reduced high availability requirements.")),(0,r.kt)("p",null,"Sleakops' architecture provides users with a powerful, scalable, and secure environment for deploying and managing applications. The clear separation of accounts and environments allows for efficient development, testing, and production workflows with maximum control over resources."))}m.isMDXComponent=!0}}]);