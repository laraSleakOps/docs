"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6741],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>v});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,v=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(v,o(o({ref:t},u),{},{components:r})):n.createElement(v,o({ref:t},u))}));function v(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5994:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=r(7462),a=(r(7294),r(3905)),i=r(9378);r(7435);const o={sidebar_label:"Architecture Overview",sidebar_position:0},c="Architecture Overview",l={unversionedId:"provider/awsprovider/aws",id:"provider/awsprovider/aws",title:"Architecture Overview",description:"This is an illustrative example of a general application.",source:"@site/docs/provider/awsprovider/aws.mdx",sourceDirName:"provider/awsprovider",slug:"/provider/awsprovider/aws",permalink:"/provider/awsprovider/aws",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_label:"Architecture Overview",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"AWS Provider",permalink:"/provider/awsprovider/"},next:{title:"AWS Account ID",permalink:"/provider/awsprovider/aws-account-id"}},s={},u=[{value:"Security Account",id:"security-account",level:3},{value:"Management Account (Management Environment)",id:"management-account-management-environment",level:3},{value:"Production Account (Production Environment)",id:"production-account-production-environment",level:3},{value:"Development Account (dev, qa, and staging Environments)",id:"development-account-dev-qa-and-staging-environments",level:3}],p={toc:u},d="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"architecture-overview"},"Architecture Overview"),(0,a.kt)("p",null,"This is an illustrative example of a general application."),(0,a.kt)(i.Z,{mdxType:"Zoom"},(0,a.kt)("img",{src:"/img/provider/aws/craftech-reference-architecture.png",alt:"craftech-reference-architecture"})),(0,a.kt)("p",null,"Sleakops implements a well-defined infrastructure architecture designed to optimize operational excellence while ensuring a secure and scalable environment for users. The architecture consists of four accounts, each serving distinct purposes and isolated from one another."),(0,a.kt)("p",null,"Each account has a VPN instance generated upon the creation of the first cluster."),(0,a.kt)("h3",{id:"security-account"},"Security Account"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The Security Account serves as a centralized hub for managing IAM users and their access to the system. ")),(0,a.kt)("h3",{id:"management-account-management-environment"},"Management Account (Management Environment)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Contains an EKS cluster with integrated CI/CD (GitHub and HashiCorp Vault)."),(0,a.kt)("li",{parentName:"ul"},"Vault manages credentials for CloudWatch, enhancing monitoring capabilities."),(0,a.kt)("li",{parentName:"ul"},"VPC Peering enables private connections to other accounts.")),(0,a.kt)("h3",{id:"production-account-production-environment"},"Production Account (Production Environment)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Supports external users and requires a fully functional database (RDS Master)."),(0,a.kt)("li",{parentName:"ul"},"Utilizes Private DB Subnet for RDS Master, RDS Slave, and ElastiCache, each on different Availability Zones (AZs) for high availability."),(0,a.kt)("li",{parentName:"ul"},"Backend Deployment with replicas distributed across different AZs."),(0,a.kt)("li",{parentName:"ul"},"Frontend Deployment with LoadBalancer for even distribution of network load."),(0,a.kt)("li",{parentName:"ul"},"Route53 serves as DNS and performs health checks for the application."),(0,a.kt)("li",{parentName:"ul"},"AWS CloudFront serves static frontend content from an S3 bucket."),(0,a.kt)("li",{parentName:"ul"},"RDS Slave acts as a replica of RDS Master for failover scenarios, maximizing uptime.")),(0,a.kt)("h3",{id:"development-account-dev-qa-and-staging-environments"},"Development Account (dev, qa, and staging Environments)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Contains three environments: dev, qa, and staging."),(0,a.kt)("li",{parentName:"ul"},"Replicas of the prod environment for code writing, testing, and pre-releases."),(0,a.kt)("li",{parentName:"ul"},"Ensures isolated testing to prevent issues for external users."),(0,a.kt)("li",{parentName:"ul"},"Similar architecture to prod but without RDS Slave for reduced high availability requirements.")),(0,a.kt)("p",null,"Sleakops' architecture provides users with a powerful, scalable, and secure environment for deploying and managing applications. The clear separation of accounts and environments allows for efficient development, testing, and production workflows with maximum control over resources."))}m.isMDXComponent=!0},7435:()=>{}}]);