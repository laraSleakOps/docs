"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7041],{5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),l=n(6010);const r={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),l=n(7294),r=n(6010),o=n(2466),s=n(6550),i=n(1980),u=n(7392),p=n(12);function c(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function d(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(r),(0,l.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=d(e),[o,s]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[i,u]=k({queryString:n,groupId:a}),[c,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,p.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),y=(()=>{const e=i??c;return m({value:e,tabValues:r})?e:null})();(0,l.useLayoutEffect)((()=>{y&&s(y)}),[y]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),h(e)}),[u,h,r]),tabValues:r}}var y=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),a=u[n].value;a!==s&&(c(t),i(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},o,{className:(0,r.Z)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":s===t})}),n??t)})))}function g(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=h(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",b.tabList)},l.createElement(f,(0,a.Z)({},e,t)),l.createElement(g,(0,a.Z)({},e,t)))}function w(e){const t=(0,y.Z)();return l.createElement(v,(0,a.Z)({key:String(t)},e))}},3298:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var a=n(7462),l=(n(7294),n(3905)),r=n(6893),o=n(4866),s=n(5162);const i={},u="CLI",p={unversionedId:"cli",id:"cli",title:"CLI",description:"Streamline CI/CD with SleakOps CLI",source:"@site/docs/cli.mdx",sourceDirName:".",slug:"/cli",permalink:"/cli",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Variable Group",permalink:"/vargroup/"},next:{title:"Shared Responsibility Model",permalink:"/responsability-model"}},c={},d=[{value:"Streamline CI/CD with SleakOps CLI",id:"streamline-cicd-with-sleakops-cli",level:2},{value:"1. Authentication",id:"1-authentication",level:3},{value:"2. Create a Build",id:"2-create-a-build",level:3},{value:"3. Make a Deploy",id:"3-make-a-deploy",level:3},{value:"CI/CD Examples",id:"cicd-examples",level:2}],m={toc:d},k="wrapper";function h(e){let{components:t,...n}=e;return(0,l.kt)(k,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"cli"},"CLI"),(0,l.kt)("h2",{id:"streamline-cicd-with-sleakops-cli"},"Streamline CI/CD with SleakOps CLI"),(0,l.kt)("p",null,"SleakOps CLI is a Python package designed to simplify your CI/CD workflows.\nWith just two straightforward subcommands, you can effortlessly create builds and deploy your applications, ensuring a smooth and efficient development process.\nTo get started, simply install SleakOps using pip:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pip install sleakops\n")),(0,l.kt)("h3",{id:"1-authentication"},"1. Authentication"),(0,l.kt)("p",null,"To authenticate with the SleakOps CLI, you need an API_KEY. You can obtain this key from the ",(0,l.kt)("a",{parentName:"p",href:"https://console.sleakops.com/settings/apikey"},"console ",(0,l.kt)(r.AlO,{mdxType:"FiExternalLink"}))," by clicking on Generate API-Key.\nEach company is allowed to have only one active API_KEY at a time. If you request a new API_KEY, the old one will be automatically revoked. The page shows the company keys and who generated them."),(0,l.kt)("p",null,"Once you have your API_KEY, you can use it as an argument when running SleakOps commands or set it as an environment variable named SLEAKOPS_KEY. "),(0,l.kt)("h3",{id:"2-create-a-build"},"2. Create a Build"),(0,l.kt)("p",null,"To create a build for your application, use the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sleakops build [options]\n")),(0,l.kt)("p",null,"This command initiates the build process, and SleakOps takes care of compiling your code, running tests, and packaging the application for deployment. You can specify additional options to tailor the build process to your specific needs."),(0,l.kt)("p",null,"There are two required arguments ",(0,l.kt)("strong",{parentName:"p"},"project")," and ",(0,l.kt)("strong",{parentName:"p"},"branch"),", which are used to know what to build.\nBesides, you might add a ",(0,l.kt)("strong",{parentName:"p"},"commit")," to build a previous commit, a ",(0,l.kt)("strong",{parentName:"p"},"tag")," for the image, and the ",(0,l.kt)("em",{parentName:"p"},"provider")," if you need to specify it."),(0,l.kt)("p",null,"As previously mentioned the key might be an input here or a environment variable."),(0,l.kt)("p",null,"Also, you might mark if you want the process to ",(0,l.kt)("strong",{parentName:"p"},"wait")," the build to be finished or not."),(0,l.kt)("h3",{id:"3-make-a-deploy"},"3. Make a Deploy"),(0,l.kt)("p",null,"Once your build is ready, you can effortlessly deploy your application using the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sleakops deploy [options]\n")),(0,l.kt)("p",null,"SleakOps seamlessly handles the deployment process, ensuring that your application is up and running in no time. You can specify deployment options to fine-tune the process according to your requirements."),(0,l.kt)("p",null,"Here ",(0,l.kt)("strong",{parentName:"p"},"project")," and ",(0,l.kt)("strong",{parentName:"p"},"environment")," are the required arguments. User might add a ",(0,l.kt)("strong",{parentName:"p"},"build")," or ",(0,l.kt)("strong",{parentName:"p"},"tag")," image to specify an image. Here the ",(0,l.kt)("strong",{parentName:"p"},"wait")," and ",(0,l.kt)("strong",{parentName:"p"},"key")," options are present to, the usage is the same as in the build command."),(0,l.kt)("h2",{id:"cicd-examples"},"CI/CD Examples"),(0,l.kt)("p",null,"With SleakOps CLI, you can integrate your CI/CD pipelines, automate the build and deployment process, and focus on delivering exceptional applications without the hassle of manual intervention.\nEnjoy a seamless development experience with SleakOps, and make your custom CI/CD workflows."),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"GitHub",mdxType:"TabItem"},(0,l.kt)("code",null,"name: Deploy",(0,l.kt)("p",null,"on:\npush:\nbranches:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"  - main\n")),(0,l.kt)("p",null,"jobs:\nbuild:\nruns-on: ubuntu-latest\nsteps:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"  - name: Checkout repository\n    uses: actions/checkout@v2\n\n  - name: Install SleakOps CLI\n    run: pip install sleakops\n\n  - name: Run SleakOps build\n    env:\n      SLEAKOPS_KEY: ${{ secrets.SLEAKOPS_KEY }}\n    run: sleakops build -p core -b main -w\n")),(0,l.kt)("p",null,"  deploy:\nneeds: ","[build]","\nruns-on: ubuntu-latest\nsteps:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"  - name: Checkout repository\n    uses: actions/checkout@v2\n\n  - name: Install SleakOps CLI\n    run: pip install sleakops\n\n  - name: Run SleakOps deploy\n    env:\n      SLEAKOPS_KEY: ${{ secrets.SLEAKOPS_KEY }}\n    run: sleakops deploy -p core -e main -w\n")))),(0,l.kt)(s.Z,{value:"GitLab",mdxType:"TabItem"},(0,l.kt)("code",null,"image: python:3.9",(0,l.kt)("p",null,"stages:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"build"),(0,l.kt)("li",{parentName:"ul"},"deploy")),(0,l.kt)("p",null,"build:\nstage: deploy\nscript:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"  - apt-get update -qy\n  - apt-get install -y python3-pip\n  - pip3 install sleakops\n  - sleakops build -p core -b main -w\n")),(0,l.kt)("p",null,"deploy:\nstage: deploy\nneeds:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"- build\n")),(0,l.kt)("p",null,"  script:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"  - apt-get update -qy\n  - apt-get install -y python3-pip\n  - pip3 install sleakops\n  - sleakops deploy -p core -e main -w\n")))),(0,l.kt)(s.Z,{value:"BitBucket",mdxType:"TabItem"},(0,l.kt)("code",null,"image: python:3.9",(0,l.kt)("p",null,"pipelines:\ndefault:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"- step:\n  name: Deploy\n  script:\n  - apt-get update -qy\n  - apt-get install -y python3-pip\n  - pip3 install sleakops\n  - sleakops build -p core -b main -w\n  - sleakops deploy -p core -e main -w\n"))))))}h.isMDXComponent=!0}}]);