"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8348],{2905:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=a(7462),n=(a(7294),a(3905)),i=a(6893);const o={},l="Service",s={unversionedId:"service/index",id:"service/index",title:"Service",description:"In Sleakops a service is an entity of an application, as in a microservices architecture.",source:"@site/docs/service/index.mdx",sourceDirName:"service",slug:"/service/",permalink:"/service/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Gitlab",permalink:"/project/gitlab"},next:{title:"Dependencies",permalink:"/dependency/"}},c={},u=[{value:"Create a Service",id:"create-a-service",level:2},{value:"Service Types",id:"service-types",level:3},{value:"Create a Job",id:"create-a-job",level:2},{value:"Resource Set",id:"resource-set",level:3},{value:"Cloud resources",id:"cloud-resources",level:3}],d={toc:u},p="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"service"},"Service"),(0,n.kt)("p",null,"In Sleakops a service is an entity of an application, as in a microservices architecture."),(0,n.kt)("h2",{id:"create-a-service"},"Create a Service"),(0,n.kt)("p",null,"To create a service you provide the following basic information:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Project and Environment for the service to be deployed."),(0,n.kt)("li",{parentName:"ul"},"A 'name' to identify the service."),(0,n.kt)("li",{parentName:"ul"},"A 'command' (or CMD of Dockerfile) that will be applied to the service execution. If no command is provided, the default Docker command will be used. "),(0,n.kt)("li",{parentName:"ul"},"Service TYPE which are described ",(0,n.kt)("a",{parentName:"li",href:"#service-types"},"below ",(0,n.kt)(i.H8c,{mdxType:"FiCornerRightDown"})),"."),(0,n.kt)("li",{parentName:"ul"},"Resource set which is also described ",(0,n.kt)("a",{parentName:"li",href:"#resource-set"},"below ",(0,n.kt)(i.H8c,{mdxType:"FiCornerRightDown"})))),(0,n.kt)("h3",{id:"service-types"},"Service Types"),(0,n.kt)("p",null,"Depending on the Service type chosen you will need to fill in different fields, besides that, the Command will always be applied so there is where comes the importance of that field which is normally the line you use to make the service work. The actual possible service types are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Worker: Requires nothing else, just be sure that the defined CMD activates the worker."),(0,n.kt)("li",{parentName:"ul"},"Cron Job: You need to define the 'Cron' or the frequency of a Job execution, which is basically, set how often the Job occurs."),(0,n.kt)("li",{parentName:"ul"},"Hook: An 'event' is required to be set, when this event happens the Hook triggers the CMD."),(0,n.kt)("li",{parentName:"ul"},"Web Service: A Web Service requires an 'url' that will work as its endpoint. SleakOps generate this url based on the name of the service and external-dns will use the hierarchy of where it has been created. As an example, the URL will be: {service_name}.{environment_name}.{provider_domain_name}.")),(0,n.kt)("h2",{id:"create-a-job"},"Create a Job"),(0,n.kt)("p",null,"A Job uses the same fields that the Service, the difference radicates in that a Job can be created and executed at any moment, by the other side, while you create a Service as a structural need of your Deployment a Job is something that you create to be executed at the moment."),(0,n.kt)("h3",{id:"resource-set"},"Resource Set"),(0,n.kt)("p",null,"You'll also need to set the resource set needed for this service to run."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"CPU Min"),(0,n.kt)("td",{parentName:"tr",align:null},"Min CPU requested in milicores. More information ",(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/concepts/configuration/manage-resources-containers/#meaning-of-cpu"},"here ",(0,n.kt)(i.AlO,{mdxType:"FiExternalLink"})))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"CPU Max"),(0,n.kt)("td",{parentName:"tr",align:null},"Max CPU requested in milicores. More information ",(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/concepts/configuration/manage-resources-containers/#meaning-of-cpu"},"here ",(0,n.kt)(i.AlO,{mdxType:"FiExternalLink"})))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Memory Min"),(0,n.kt)("td",{parentName:"tr",align:null},"Min memory requested in MegaBytes. More information ",(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/concepts/configuration/manage-resources-containers/#meaning-of-cpu"},"here ",(0,n.kt)(i.AlO,{mdxType:"FiExternalLink"})))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Memory Max"),(0,n.kt)("td",{parentName:"tr",align:null},"Max memory requested in MegaBytes. More information ",(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/concepts/configuration/manage-resources-containers/#meaning-of-cpu"},"here ",(0,n.kt)(i.AlO,{mdxType:"FiExternalLink"})))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Autoscaling"),(0,n.kt)("td",{parentName:"tr",align:null},"Enables Horizontal Pod Austocaling as described ",(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/tasks/run-application/horizontal-pod-autoscale/"},"here ",(0,n.kt)(i.AlO,{mdxType:"FiExternalLink"})),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"CPU Target"),(0,n.kt)("td",{parentName:"tr",align:null},"Only when autoscaling is enabled. Average CPU utilization that triggers the scaling.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Memory Target"),(0,n.kt)("td",{parentName:"tr",align:null},"Only when autoscaling is enabled. Average memory utilization that triggers the scaling.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Replica Min"),(0,n.kt)("td",{parentName:"tr",align:null},"Only when autoscaling is enabled. Min amount of replicas to be achieved.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Replica Max"),(0,n.kt)("td",{parentName:"tr",align:null},"Only when autoscaling is enabled. Max amount of replicas to be achieved.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Replicas Desired"),(0,n.kt)("td",{parentName:"tr",align:null},"Only when autoscaling is enabled. The number of replicas that the service initially has.")))),(0,n.kt)("h3",{id:"cloud-resources"},"Cloud resources"),(0,n.kt)("p",null,"Sleakops doesn't generate any resources in your provider when you create a service but you should take into account that the resource set you've defined come from the nodes of the Cluster, so these resources like RAM and Cores are consumed from the EC2 instance."))}m.isMDXComponent=!0}}]);